# -*- coding: utf-8 -*-
# """Stage_PNM.ipynb

# Automatically generated by Colaboratory.

# Original file is located at
#     https://colab.research.google.com/drive/15EToNtAUA59TUWS0KFPHcD8iYU4NA7Li
# """

# !apt-get install -qq curl g++ make
# !curl -L http://download.osgeo.org/libspatialindex/spatialindex-src-1.8.5.tar.gz | tar xz
# import os
# os.chdir('spatialindex-src-1.8.5')
# !./configure
# !make
# !make install
# !pip install rtree
# !ldconfig
# !pip install geopandas
# !pip install mapclassify
# !pip install contextily

# numpy et pandas pour la manipuler et importer les données
import mapclassify
import contextily
import pandas as pd
import numpy as np

# pour géoréférencées les données 
#pip install geopandas

import geopandas as gpd



# pour les fonds de cartes
import contextily as cx

# pour transformer les colonnes de latitudes et longitudes en points ou polygones géoréférencés
from shapely.geometry import Polygon, Point # LineString,

# afficher les figures 
import seaborn as sns
import matplotlib.pyplot as plt

# indiquer le path dans drive 

# # connecter ce fichier google colab à notre drive 
# from google.colab import drive 

# # indiquer que l'on souhaite récupérer les fichiers dans google drive
# drive.mount('/content/drive', force_remount=True) 

# gdrive_path = "/content/drive/MyDrive/Stage_PNM/"

# """# Importer manuellement les fichiers 
# Importer au format csv pour faire les analyses stat sur R 




#"num_maille_v = pd.read_csv("/content/drive/MyDrive/Stage_PNM/Maillage_protocole_eryngium_PNM1.csv")
#num_maille_v.headolonnes au format décimale pour pouvoir ensuite les convertir en geometry
 #for i in num_maille_v.columns[:4]:
  #if num_maille_v[i].dtype == object:
   # num_maille_v[i] = num_maille_v[i].str.replace(',', '.').astype(float)
    #num_maille_v[i] = pd.to_numeric(num_maille_v[i])

# convertir à partir de la cinquième colonne au format booléen
#for j in num_maille_v.columns[5:]:
  #if num_maille_v[j].dtype == float:
    #num_maille_v[j] = num_maille_v[j].astype(bool)
  #else : 
    #continue

""" Importer le fichier shp avec les coordonnées spatiales de chaque maille"""

num_maille = gpd.read_file("C:/Users/Marjo/OneDrive/Documents/Maitrise Biologie/été 2022/stage PnM/STAGE 2022/Mercantour/MAILLAGE/Maillage_protocole_eryngium_PNM1.shp")

num_maille.crs
num_maille = num_maille.assign(P_A_2004 = [0,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,0,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,0,1,1,0,0,0,1,1,1,0,0,0,1,1,1,1,1])


num_maille.head()

num_maille.head()


# Présence/Absence : Séries et cartes 1997, 2001, 2004
# Maille présence absence - donc à utiliser : Eryngium relevés 1997 ...2009.xls

num_maille = num_maille.assign(P_A_1997 = [0,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,1,0,0,0,0,0,0,1,1,1,1,1,1,0,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,1,1])
num_maille = num_maille.assign(P_A_2001 = [0,1,0,0,0,0,0,0,1,0,1,1,1,1,1,1,0,0,1,0,0,0,0,0,1,1,0,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,0,1,1,1,0,1,0,0,0,1,0,0,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,1,1,1])

# enlever les double virgules quand la longueur de la serie est vérifié
num_maille = num_maille.assign(P_A_2004 = [0,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,0,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,0,1,1,0,0,0,1,1,1,0,0,0,1,1,1,1,1])
num_maille = num_maille.assign(P_A_2006 = [0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,
                                           0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,1,
                                           0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
                                           0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,
                                           0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,
                                           0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,1,
                                           0,0,1,0,0,1,1,1,1,1,1,1,1,0,0,0,1,1,
                                           0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,
                                           0,0,0,0,0,0,1,1,1,1,1,1,0,1,0,0,
                                           0,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,
                                           0,0,1,1,1,1,1,1,1,1,1,0,0,0,
                                           0,0,0,1,1,1,0,0,0,0,0,1,1,0])

num_maille = num_maille.assign(P_A_2009 = [0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,
                                           0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,1,
                                           0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
                                           0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,
                                           0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,
                                           0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,1,
                                           0,0,1,0,0,1,1,1,1,1,1,1,1,0,0,0,1,1,
                                           0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,
                                           0,0,0,0,0,0,1,1,1,1,1,1,0,1,0,0,
                                           0,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,
                                           0,0,1,1,1,1,1,1,1,1,1,0,0,0,
                                           0,0,0,1,1,1,0,0,0,0,0,1,1,0])

#### Stat descriptive 

num_maille['P_A_1997'].value_counts()
num_maille['P_A_2001'].value_counts()
num_maille['P_A_2004'].value_counts()
num_maille['P_A_2006'].value_counts()
num_maille['P_A_2009'].value_counts()

Pres_abs = pd.DataFrame({"Présence":[111, 122, 134, 109, 108]})
Pres_abs = Pres_abs.assign(Absence = [89, 78, 66, 91, 92])

Pres_abs.index = ["1997", "2001","2004","2006","2009"]

Pres_abs.mean()
Pres_abs.std()

# 

Pres_abs.plot.bar(figsize=(10,10), rot=30, xlabel="Années",ylabel="Nombre de mailles", 
                  title = 'Présence/absence des 200 mailles entre 1997 et 2009 \n au Vallon du Lauzanier (PnM)').get_figure().savefig("C:/Users/Marjo/OneDrive/Documents/Maitrise Biologie/été 2022/stage PnM/STAGE 2022/Mercantour/Resultat_part1/Presence_absence_1997_2009.png")


plt.show()
fig_AP = Pres_abs.plot.bar(figsize=(10,10))
fig_AP.set_title('Présence/absence des mailles entre 1997 et 2009 \n au Vallon du Lauzanier (PnM)')
fig_AP.set_ylabel("Nombre de \n mailles", fontsize=15)
fig_AP.set_xticks("Années", fontsize=15)


### Ajout de l'annee 2022 au protocole maillage, mais pas eu le temps de faire toute les mailles
# créer un nouveau data frame avec colonne 1 : id_num -> numéro de maille
#                                  colonne 2 : P_A_2022 -> présence ou absence de l'espèce par maille
#                                  colonne 3 : abond_2022 -> classe d'abondance par maille


"Sélectionner les mailles des années 97, 2001, 2004, 2006 et 2009 pour les comparer avec 2022"

values = [11,12,13,14,15,27,28,29,30,31,32,45,46,47,48,49,63,64,65,66,67,83,84,85,101,102,112,113,114,115,116,117,118,119,120,121,135,136,137,151,152,153,166,167,168,169,181]

    
select_maille = num_maille[num_maille.id_num.isin(values)]


some_maille = pd.DataFrame({"id_num" : [11,12,13,14,15,
                                        27,28,29,30,31,32,
                                        45,46,47,48,49,
                                        63,64,65,66,67,
                                        83,84,85,
                                        101,102,
                                        112,113,114,115,116,117,118,119,120,121,
                                        135,136,137,
                                        151,152,153,
                                        166,167,168,169,
                                        181]})

select_maille = select_maille.assign(P_A_2022 = [1,1,1,1,1,
                                             1,1,1,1,1,1,
                                             1,1,1,1,1,
                                             1,1,1,1,1,
                                             1,0,0,
                                             1,0,
                                             1,1,1,1,1,1,1,1,0,1,
                                             1,1,1,
                                             1,1,1,
                                             1,1,1,1,
                                             1])


some_maille = some_maille.assign(abond_2022 = ["1-10","51-250","51-250","11-500","11-50",
                                               "Absent","11-50","51-250","51-250","51-250","11-50",
                                               "51-250","1-10","1-10","1-10","11-50",
                                               "<250","1-10","11-50","11-50","1-10",
                                               "51-250","Absent","Absent",
                                               "11-50","Absent",
                                               "51-250","51-250","<250","<250","51-250","51-250","1-10","1-10","Absent","1-10",
                                               "<250","51-250","1-10",
                                               "51-250","51-250","51-250",
                                               "<250","51-250","11-50","11-50",
                                               "51-250"])



### Stat descriptive avec 2022 mais pas toutes les mailles
((43-40)/40)*100

select_maille['P_A_1997'].value_counts()
select_maille['P_A_2001'].value_counts()
select_maille['P_A_2004'].value_counts()
select_maille['P_A_2006'].value_counts()
select_maille['P_A_2009'].value_counts()
select_maille["P_A_2022"].value_counts()



Pres_abs = pd.DataFrame({"Présence":[40, 41, 42, 36, 36,43]})
Pres_abs = Pres_abs.assign(Absence = [7, 6, 5, 11, 11, 4])
Pres_abs.index = ["1997", "2001","2004","2006","2009","2022"]

Pres_abs.std()

Pres_abs.plot.bar(figsize=(10,10), rot=30, xlabel="Années",ylabel="Nombre de mailles", 
                  title = 'Présence/absence de 47 mailles entre 1997 et 2022 \n au Vallon du Lauzanier (PnM)').get_figure().savefig("C:/Users/Marjo/OneDrive/Documents/Maitrise Biologie/été 2022/stage PnM/STAGE 2022/Mercantour/Resultat_part1/Presence_absence_1997_2009.png")

select_maille.head()

# pour comparer les mailles fauchées par rapport aux mailles non fauchées
# pour les mailles non fauchées on a utilisé le pdf maillage. 
# ATTENTION : dans la ligne du haut 1F n'est pas fauchée (info G. Lombard, 2022, échange avec lui sur le terrain Marjorie Romeo)
select_maille = select_maille.assign(gestion = "")

"""

Il y a 8 mailles pour fauchées et 8 mailles non fauchées

Sélectionner les mailles fauchées (FAU) et non fauchées (NFAU)

ATTENTION : faire ce test avec l'objet select maille pour aussi avoir l'année 2022
Changer de maille pour la non fauché F, s'aider du projet Qgis pour aller plus vite
"""

values = [32,85,151,152,153,167,168,31,65,135,136,137,169,181]
maille_fauche = select_maille[select_maille.id_num.isin(values)]

# réinitialiser les colonnes 
maille_fauche.reset_index(inplace=True, drop=False)

# enlever la colonne index qui n'était plus à jour
maille_fauche.pop("index")

maille_fauche = maille_fauche.assign(gestion = ["F_tardive","F_tardive","F_tardive","F_tardive","F_tardive","F_tardive","F_tardive","Non_fauchée","Non_fauchée","Non_fauchée","Non_fauchée","Non_fauchée","Non_fauchée","Non_fauchée"])

# Stat descriptive fauche vs non fauche 

# regarder les présences/absences par année et selon si les mailles sont fauchées ou pas 
fauche_97 = maille_fauche.groupby(maille_fauche["P_A_1997"])['gestion'].value_counts()
fauche_01 = maille_fauche.groupby(maille_fauche["P_A_2001"])['gestion'].value_counts()
fauche_04 = maille_fauche.groupby(maille_fauche["P_A_2004"])['gestion'].value_counts()
fauche_06 = maille_fauche.groupby(maille_fauche["P_A_2006"])['gestion'].value_counts()
fauche_09 = maille_fauche.groupby(maille_fauche["P_A_2009"])['gestion'].value_counts()
fauche_22 = maille_fauche.groupby(maille_fauche["P_A_2022"])['gestion'].value_counts()



fauche_97
fauche_01
fauche_04
fauche_06
fauche_09
fauche_22

# Présence (1) et Fauché (F_tardive)
fauche_PA = pd.DataFrame({"Présence_Fauchée":[6, 6, 6, 6, 6, 6]})

# Présence (1) et Non_fauchée
fauche_PA = fauche_PA.assign(Présence_Non_Fauchée = [6, 6, 7, 6, 6, 7])

# Absence (0) et fauché (F_tardive)
fauche_PA = fauche_PA.assign(Absence_Fauchée = [1, 1, 1, 1, 1, 1])


# Absence (0) et Non_fauchée
fauche_PA = fauche_PA.assign(Absence_Non_Fauchée = [1, 1, 0, 1, 1, 0])


fauche_PA.index = ["1997", "2001","2004","2006","2009","2022"]

fauche_PA.plot.bar(figsize=(10,10), rot=30, xlabel="Années",ylabel="Nombre de mailles", legend=True,
                  title = 'Comparaison de 7 mailles fauchées et 7 non fauchées entre 1997 et 2022 \n au Vallon du Lauzanier (PnM)').get_figure().savefig("C:/Users/Marjo/OneDrive/Documents/Maitrise Biologie/été 2022/stage PnM/STAGE 2022/Mercantour/Resultat_part1/Presence_absence_1997_2009.png")




# protocole transect entre 2010 et 2014
# ATTENTION : - pas de transect traversé pour l'annee 2010
#             - pas de données pour fauche bas et traversee pour 2014 pr exclos il y aseulement une feuille avec le maillage et non la feuille de protocole associée avec les détails de l'échantillonnage
# unité de l'abondance en %


transect = pd.DataFrame({"Pourcentage_présence" : [11.85,0,13.95,
                                        15.55,0,10.52,26.06,
                                        11.62,0,13.85,20.99,
                                        16.66,0.78,17.15,22.9,
                                        22.9,0.78]})

# cette colonne permet de garder une trace de la localisation des transects, à quelle maille ils sont associés
transect = transect.assign(transect = ["R7/R8","R3/R4","R1/R2",
                                       "R7/R8","R3/R4","R1/R2","R6",
                                       "R7/R8","R3/R4","R1/R2","R6",
                                       "R7/R8","R3/R4","R1/R2","R6",
                                       "R7/R8","R3/R4"])

# mode de gestion appliquée sur les mailles échentillonés
# f_bas = fauche du bas 
# f_haut = fauche du haut
# le transect traversé n'a pas été exploité
transect = transect.assign(gestion = ["f_bas","defend","f_haut",
                                      "f_bas","defend","f_haut","traversee",
                                      "f_bas","defend","f_haut","traversee",
                                      "f_bas","defend","f_haut","traversee",
                                      "f_bas","defend"])

# année où l'échantillonnage a été fait
transect = transect.assign(annee = [2010,2010,2010,
                                    2011,2011,2011,2011,
                                    2012,2012,2012,2012,
                                    2013,2013,2013,2013,
                                    2014,2014])

""" Stat descriptive transect"""

# Présence (1) et Fauché (F_tardive)
transect_annee = pd.DataFrame({"Fauche_bas":[11.85,15.55,11.62,16.66,22.9]})

# Présence (1) et Non_fauchée
transect_annee = transect_annee.assign(fauche_haut = [13.95,10.52,13.85,17.15,0])

# Absence (0) et fauché (F_tardive)
transect_annee = transect_annee.assign(Traversee_non_fauchée = [0,26.06,20.99,22.9,0])

# Absence (0) et Non_fauchée
transect_annee = transect_annee.assign(Defend = [0,0,0,0,0])

transect_annee.index = ["2010", "2011","2012","2013","2014"]
transect
transect_annee.plot.bar(figsize=(10,10), rot=30, xlabel="Années",ylabel="Présence de l'E. alpinum (%)", legend=True,
                   title = 'Pourcentage de présence de l\'E. alpinum en fonction de 4 gestions d\'alpage différentes entre 2010 et 2024 \n au vallon du Lauzanier (PnM)').get_figure().savefig("C:/Users/Marjo/OneDrive/Documents/Maitrise Biologie/été 2022/stage PnM/STAGE 2022/Mercantour/Resultat_part1/Presence_absence_1997_2009.png")



# localisation colonne
num_maille.iloc[:,8]

num_maille[:,7:]

num_maille["P_A_1997"].value_counts()
num_maille["P_A_2009"].value_counts()

""" Pour observer s'il y a une effet année sur la présence ou absence de l'espèce dans les mailles entre 1997 et 2009

Test Macnemar présence/absence entre 1997 et 2001 """

somme_0_0 = 0 
somme_1_1 = 0
somme_0_1 = 0
somme_1_0 = 0

for i,j in zip(num_maille["P_A_1997"], num_maille["P_A_2001"]):
        if(i==0 and j==0):
          somme_0_0 += 1
        elif (i==1 and j==1):
          somme_1_1 += 1
        elif (i==0 and j==1):
          somme_0_1 += 1
        elif (i==1 and j==0):
          somme_1_0 += 1

somme_1_0

somme_0_1

somme_1_1

somme_0_0



from statsmodels.stats.contingency_tables import mcnemar

# Create a dataset
data = [[somme_0_0, somme_0_1],
        [somme_1_0, somme_1_1]]

data

print(mcnemar(data, exact=True)) # distribution binomiale car les données sont booléennes (binaires) donc arg exact =True précise que notre distribution est binomiale

num_maille.head()

"""# Test Macnemar présence/absence entre 1997 et 2001"""

somme_0_0 = 0 
somme_1_1 = 0
somme_0_1 = 0
somme_1_0 = 0

for i,j in zip(num_maille["P_A_1997"], num_maille["P_A_2001"]):
        if(i==0 and j==0):
          somme_0_0 += 1
        elif (i==1 and j==1):
          somme_1_1 += 1
        elif (i==0 and j==1):
          somme_0_1 += 1
        elif (i==1 and j==0):
          somme_1_0 += 1

somme_0_0

somme_1_1

somme_0_1

somme_1_0

# Create a dataset
data = [[somme_0_0, somme_0_1],
        [somme_1_0, somme_1_1]]

data

print(mcnemar(data, exact=True))

"""# Test Macnemar présence/absence entre 2001 et 2004"""

somme_0_0 = 0 
somme_1_1 = 0
somme_0_1 = 0
somme_1_0 = 0

for i,j in zip(num_maille["P_A_2001"], num_maille["P_A_2004"]):
        if(i==0 and j==0):
          somme_0_0 += 1
        elif (i==1 and j==1):
          somme_1_1 += 1
        elif (i==0 and j==1):
          somme_0_1 += 1
        elif (i==1 and j==0):
          somme_1_0 += 1

somme_0_0

somme_1_1

somme_0_1

somme_1_0

# Create a dataset
data = [[somme_0_0, somme_0_1],
        [somme_1_0, somme_1_1]]

data

print(mcnemar(data, exact=True))

"""# Test Macnemar présence/absence entre 2004 et 2006"""

somme_0_0 = 0 
somme_1_1 = 0
somme_0_1 = 0
somme_1_0 = 0

for i,j in zip(num_maille["P_A_2004"], num_maille["P_A_2006"]):
        if(i==0 and j==0):
          somme_0_0 += 1
        elif (i==1 and j==1):
          somme_1_1 += 1
        elif (i==0 and j==1):
          somme_0_1 += 1
        elif (i==1 and j==0):
          somme_1_0 += 1

somme_0_0

somme_1_1

somme_0_1

somme_1_0

# Create a dataset
data = [[somme_0_0, somme_0_1],
        [somme_1_0, somme_1_1]]

data

print(mcnemar(data, exact=True))

"""# Test Macnemar présence/absence entre 2006 et 2009"""

somme_0_0 = 0 
somme_1_1 = 0
somme_0_1 = 0
somme_1_0 = 0

for i,j in zip(num_maille["P_A_2006"], num_maille["P_A_2009"]):
        if(i==0 and j==0):
          somme_0_0 += 1
        elif (i==1 and j==1):
          somme_1_1 += 1
        elif (i==0 and j==1):
          somme_0_1 += 1
        elif (i==1 and j==0):
          somme_1_0 += 1

somme_0_0

somme_1_1

somme_0_1

somme_1_0

# Create a dataset
data = [[somme_0_0, somme_0_1],
        [somme_1_0, somme_1_1]]

data

print(mcnemar(data, exact=True))


"""# Test Macnemar présence/absence entre 2004 et 2006"""

for i,j in zip(num_maille["P_A_2004"], num_maille["P_A_2006"]):
        if(i==0 and j==0):
          somme_0_0 += 1
        elif (i==1 and j==1):
          somme_1_1 += 1
        elif (i==0 and j==1):
          somme_0_1 += 1
        elif (i==1 and j==0):
          somme_1_0 += 1

somme_0_0

somme_1_1

somme_0_1

somme_1_0

# Create a dataset
data = [[somme_0_0, somme_0_1],
        [somme_1_0, somme_1_1]]

data

print(mcnemar(data, exact=True))



"""# Test Macnemar présence/absence entre 2006 et 2009"""

for i,j in zip(num_maille["P_A_2006"], num_maille["P_A_2009"]):
        if(i==0 and j==0):
          somme_0_0 += 1
        elif (i==1 and j==1):
          somme_1_1 += 1
        elif (i==0 and j==1):
          somme_0_1 += 1
        elif (i==1 and j==0):
          somme_1_0 += 1

somme_0_0

somme_1_1

somme_0_1

somme_1_0

# Create a dataset
data = [[somme_0_0, somme_0_1],
        [somme_1_0, somme_1_1]]

data

print(mcnemar(data, exact=True))

"""Pour avoir aussi l'année 2022 -test comparatif avec l'objet select_maille

 Test Macnemar présence/absence entre 1997 et 2022"""

somme_0_0 = 0 
somme_1_1 = 0
somme_0_1 = 0
somme_1_0 = 0

for i,j in zip(select_maille["P_A_1997"], select_maille["P_A_2022"]):
        if(i==0 and j==0):
          somme_0_0 += 1
        elif (i==1 and j==1):
          somme_1_1 += 1
        elif (i==0 and j==1):
          somme_0_1 += 1
        elif (i==1 and j==0):
          somme_1_0 += 1

somme_0_0

somme_1_1

somme_0_1

somme_1_0

# Create a dataset
data = [[somme_0_0, somme_0_1],
        [somme_1_0, somme_1_1]]

data

print(mcnemar(data, exact=True))



"""# Mac nemar - fauchage



"""## Enregistrer les mailles fauchées pour 1997, 2001, 2004"""

FAU_1997 = select_maille.iloc[[31,84,150,151,152,167,168],8]
FAU_1997

FAU_2001 =  num_maille.iloc[[31,85,149,150,151,152,167,168],8]
FAU_2001

FAU_2004 =  num_maille.iloc[[31,85,149,150,151,152,167,168],9]
FAU_2004

"""## Enregistrer les mailles non fauchées pour 1997, 2001, 2004

"""

NFAU_1997 = num_maille.iloc[[31,65,133,134,135,136,166,169,181],7]
NFAU_1997

NFAU_2001 =  num_maille.iloc[[31,65,133,134,135,136,166,169,181],8]
NFAU_2001

NFAU_2004 =  num_maille.iloc[[31,65,133,134,135,136,166,169,181],9]
NFAU_2004

"""# Test Macnemar Présence/absence Fauché vs Non Fauché 

comparaison fauché 1997 et fauché 2001 : la logique a adopté combien de mailles sont passées de présence à absence, d'absence à présence, sont restées en présence et sont restées en absence.

L'objectif est de savoir s'il y a une différence significatif entre les années entre les deux techniques. Donc il faut comparer les fauchés ensemble et les non-fauchés ensemble.

## mailles fauchées
"""

# Comparaison mailles fauchées 1997 vs 2001

somme_0_0 = 0 
somme_1_1 = 0
somme_0_1 = 0
somme_1_0 = 0

for i,j in zip(FAU_1997, FAU_2001):
        if(i==0 and j==0):
          somme_0_0 += 1
        elif (i==1 and j==1):
          somme_1_1 += 1
        elif (i==0 and j==1):
          somme_0_1 += 1
        elif (i==1 and j==0):
          somme_1_0 += 1

somme_0_0

somme_1_1

somme_0_1

somme_1_0

# Create a dataset
data = [[somme_0_0, somme_0_1],
        [somme_1_0, somme_1_1]]

data

print(mcnemar(data, exact=True))

# Comparaison mailles fauchées 1997 vs 2004

somme_0_0 = 0 
somme_1_1 = 0
somme_0_1 = 0
somme_1_0 = 0

for i,j in zip(FAU_1997, FAU_2004):
        if(i==0 and j==0):
          somme_0_0 += 1
        elif (i==1 and j==1):
          somme_1_1 += 1
        elif (i==0 and j==1):
          somme_0_1 += 1
        elif (i==1 and j==0):
          somme_1_0 += 1

somme_0_0

somme_1_1

somme_0_1

somme_1_0

# Create a dataset
data = [[somme_0_0, somme_0_1],
        [somme_1_0, somme_1_1]]

data

print(mcnemar(data, exact=True))

# Comparaison mailles fauchées 2001 vs 2004

somme_0_0 = 0 
somme_1_1 = 0
somme_0_1 = 0
somme_1_0 = 0

for i,j in zip(FAU_2001, FAU_2004):
        if(i==0 and j==0):
          somme_0_0 += 1
        elif (i==1 and j==1):
          somme_1_1 += 1
        elif (i==0 and j==1):
          somme_0_1 += 1
        elif (i==1 and j==0):
          somme_1_0 += 1

somme_0_0

somme_1_1

somme_0_1

somme_1_0

# Create a dataset
data = [[somme_0_0, somme_0_1],
        [somme_1_0, somme_1_1]]

data

print(mcnemar(data, exact=True))

"""## Mailles non fauchées"""

# Comparaison mailles non fauchées 1997 vs 2001

somme_0_0 = 0 
somme_1_1 = 0
somme_0_1 = 0
somme_1_0 = 0

for i,j in zip(NFAU_1997, NFAU_2001):
        if(i==0 and j==0):
          somme_0_0 += 1
        elif (i==1 and j==1):
          somme_1_1 += 1
        elif (i==0 and j==1):
          somme_0_1 += 1
        elif (i==1 and j==0):
          somme_1_0 += 1

somme_0_0

somme_1_1

somme_0_1

somme_1_0

# Create a dataset
data = [[somme_0_0, somme_0_1],
        [somme_1_0, somme_1_1]]

data

print(mcnemar(data, exact=True))

# Comparaison mailles non fauchées 1997 vs 2004

somme_0_0 = 0 
somme_1_1 = 0
somme_0_1 = 0
somme_1_0 = 0

for i,j in zip(NFAU_1997, NFAU_2004):
        if(i==0 and j==0):
          somme_0_0 += 1
        elif (i==1 and j==1):
          somme_1_1 += 1
        elif (i==0 and j==1):
          somme_0_1 += 1
        elif (i==1 and j==0):
          somme_1_0 += 1

# Create a dataset
data = [[somme_0_0, somme_0_1],
        [somme_1_0, somme_1_1]]

data

print(mcnemar(data, exact=True))

# Comparaison mailles non fauchées 2001 vs 2004

somme_0_0 = 0 
somme_1_1 = 0
somme_0_1 = 0
somme_1_0 = 0

for i,j in zip(NFAU_2001, NFAU_2004):
        if(i==0 and j==0):
          somme_0_0 += 1
        elif (i==1 and j==1):
          somme_1_1 += 1
        elif (i==0 and j==1):
          somme_0_1 += 1
        elif (i==1 and j==0):
          somme_1_0 += 1

# Create a dataset
data = [[somme_0_0, somme_0_1],
        [somme_1_0, somme_1_1]]

data

"""# Tiges fleuries : séries et cartes 1997, 2001, 2004


"""

# fichier shp
num_maille = num_maille.assign(TF_1997 = ["absent","absent","absent","absent","absent","absent","absent","absent","absent","absent","absent","absent","absent","absent","absent","absent",
                                          "absent","absent","absent","absent","absent","absent","absent","absent","absent","absent","absent","absent","1-10","1-10","1-10","1-10",
                                          "absent","absent","absent","absent","1-10","11-50","11-50","11-50","11-50","1-10","11-50","11-50","absent","absent","absent","absent","1-10","absent",
                                          "absent","absent","absent","absent","51-250","<250","<250","<250","<250","<250","<250","11-50","51-250","absent","absent","absent","absent","absent",
                                          "absent","absent","absent","absent","absent","absent","<250","<250","<250","<250","<250","<250","<250","51-250","11-50","absent","absent","absent",
                                          "absent","absent","absent","absent","absent","1-10","<250","11-50","1-10","11-50","<250","51-250","<250","51-250","11-50","absent","absent","absent",
                                          "absent","absent","absent","absent","1-10","<250","<250","11-50","11-50","<250","<250","51-250","11-50","1-10","absent","absent","absent","1-10",
                                          "absent","absent","absent","absent","absent","absent","1-10","1-10","<250","<250","<250","<250","<250","11-50","absent","absent","absent","1-10",
                                          "absent","absent","absent","absent","absent","absent","11-50","<250","<250","<250","<250","11-50","absent","absent","absent","absent",
                                          "absent","absent","absent","absent","absent","absent","absent","51-250","<250","<250","<250","11-50","51-250","11-50","absent","absent",
                                          "absent","absent","absent","11-50","<250","11-50","<250","<250","<250","51-250","51-250","absent","absent","absent",
                                          "absent","absent","absent","1-10","1-10","1-10","absent","absent","absent","absent","absent","absent","1-10","absent"])


# fichier csv
# num_maille_v = num_maille_v.assign(TF_1997 = ["absent","absent","absent","absent","absent","absent","absent","absent","absent","absent","absent","absent","absent","absent","absent","absent",
                                          # "absent","absent","absent","absent","absent","absent","absent","absent","absent","absent","absent","absent","1-10","1-10","1-10","1-10",
                                          # "absent","absent","absent","absent","1-10","11-50","11-50","11-50","11-50","1-10","11-50","11-50","absent","absent","absent","absent","1-10","absent",
                                          # "absent","absent","absent","absent","51-250","<250","<250","<250","<250","<250","<250","11-50","51-250","absent","absent","absent","absent","absent",
                                          # "absent","absent","absent","absent","absent","absent","<250","<250","<250","<250","<250","<250","<250","51-250","11-50","absent","absent","absent",
                                          # "absent","absent","absent","absent","absent","1-10","<250","11-50","1-10","11-50","<250","51-250","<250","51-250","11-50","absent","absent","absent",
                                          # "absent","absent","absent","absent","1-10","<250","<250","11-50","11-50","<250","<250","51-250","11-50","1-10","absent","absent","absent","1-10",
                                          # "absent","absent","absent","absent","absent","absent","1-10","1-10","<250","<250","<250","<250","<250","11-50","absent","absent","absent","1-10",
                                          # "absent","absent","absent","absent","absent","absent","11-50","<250","<250","<250","<250","11-50","absent","absent","absent","absent",
                                          # "absent","absent","absent","absent","absent","absent","absent","51-250","<250","<250","<250","11-50","51-250","11-50","absent","absent",
                                          # "absent","absent","absent","11-50","<250","11-50","<250","<250","<250","51-250","51-250","absent","absent","absent",
                                          # "absent","absent","absent","1-10","1-10","1-10","absent","absent","absent","absent","absent","absent","1-10","absent"])

"""## Comptage catégories abondance espèce 


"""

# pour 250 = il y a + de 250 tiges fleuris
num_maille = num_maille.assign(TF_2001 = [0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,0,
                                          0,0,0,0,0,0,0,0,0,0,0,0,3,2,6,6,
                                          0,0,0,0,40,250,61,80,21,13,123,147,17,0,1,6,9,2,
                                          0,0,0,0,250,250,250,250,250,250,250,162,250,0,0,0,0,0,
                                          0,0,0,0,0,30,250,250,250,250,250,250,250,133,61,0,0,0,
                                          0,0,0,0,24,10,250,250,47,196,250,195,250,122,2,0,0,0,
                                          0,0,0,0,12,250,250,250,43,250,43,87,13,0,0,0,0,4,
                                          0,0,0,0,0,0,17,22,147,250,250,250,250,7,0,0,7,0,
                                          0,0,0,0,0,0,120,250,250,250,250,108,0,0,0,0,
                                          0,0,0,0,0,14,0,0,250,250,250,27,12,57,3,0,
                                          0,0,0,13,175,63,250,250,250,250,64,0,0,0,
                                          0,0,0,0,4,0,0,0,0,0,0,0,0,0])

num_maille = num_maille.assign(TF_2001_c = ["absent","absent","absent","absent","absent","absent","absent","absent","absent","absent","absent","absent","1-10","1-10","absent","absent",
                                          "absent","absent","absent","absent","absent","absent","absent","absent","absent","absent","absent","absent","1-10","1-10","1-10","1-10",
                                          "absent","absent","absent","absent","11-50","<250","51-250","51-250","11-50","11-50","51-250","51-250","11-50","absent","1-10","1-10","1-10","1-10",
                                          "absent","absent","absent","absent","<250","<250","<250","<250","<250","<250","<250","51-250","<250","absent","absent","absent","absent","absent",
                                          "absent","absent","absent","absent","absent","11-50","<250","<250","<250","<250","<250","<250","<250","51-250","51-250","absent","absent","absent",
                                          "absent","absent","absent","absent","11-50","1-10","<250","<250","11-50","51-250","<250","51-250","1-10","absent","absent","absent",
                                          "absent","absent","absent","absent","11-50","<250","<250","<250","11-50","<250","11-50","<250","11-50","51-250","11-50","absent","absent","absent","absent","1-10",
                                          "absent","absent","absent","absent","absent","absent","11-50","11-50","51-250","<250","<250","<250","<250","1-10","absent","absent","1-10","absent",
                                          "absent","absent","absent","absent","absent","absent","51-250","<250","<250","<250","<250","51-250","absent","absent","absent","absent",
                                          "absent","absent","absent","absent","absent","11-50","absent","absent","<250","<250","<250","11-50","11-50","51-250","1-10","absent",
                                          "absent","absent","absent","11-50","51-250","51-250","<250","<250","<250","<250","51-250","absent","absent","absent",
                                          "absent","absent","absent","absent","1-10","absent","absent","absent","absent","absent","absent","absent","absent","absent"])


# pour 250 = il y a + de 250 tiges fleuris
# num_maille_v = num_maille_v.assign(TF_2001 = [0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,0,
#                                           0,0,0,0,0,0,0,0,0,0,0,0,3,2,6,6,
#                                           0,0,0,0,40,250,61,80,21,13,123,147,17,0,1,6,9,2,
#                                           0,0,0,0,250,250,250,250,250,250,250,162,250,0,0,0,0,0,
#                                           0,0,0,0,0,30,250,250,250,250,250,250,250,133,61,0,0,0,
#                                           0,0,0,0,24,10,250,250,47,196,250,195,250,122,2,0,0,0,
#                                           0,0,0,0,12,250,250,250,43,250,43,87,13,0,0,0,0,4,
#                                           0,0,0,0,0,0,17,22,147,250,250,250,250,7,0,0,7,0,
#                                           0,0,0,0,0,0,120,250,250,250,250,108,0,0,0,0,
#                                           0,0,0,0,0,14,0,0,250,250,250,27,12,57,3,0,
#                                           0,0,0,13,175,63,250,250,250,250,64,0,0,0,
#                                           0,0,0,0,4,0,0,0,0,0,0,0,0,0])

# num_maille_v = num_maille_v.assign(TF_2001_c = ["absent","absent","absent","absent","absent","absent","absent","absent","absent","absent","absent","absent","1-10","1-10","absent","absent",
#                                           "absent","absent","absent","absent","absent","absent","absent","absent","absent","absent","absent","absent","1-10","1-10","1-10","1-10",
#                                           "absent","absent","absent","absent","11-50","<250","51-250","51-250","11-50","11-50","51-250","51-250","11-50","absent","1-10","1-10","1-10","1-10",
#                                           "absent","absent","absent","absent","<250","<250","<250","<250","<250","<250","<250","51-250","<250","absent","absent","absent","absent","absent",
#                                           "absent","absent","absent","absent","absent","11-50","<250","<250","<250","<250","<250","<250","<250","51-250","51-250","absent","absent","absent",
#                                           "absent","absent","absent","absent","11-50","1-10","<250","<250","11-50","51-250","<250","51-250","1-10","absent","absent","absent",
#                                           "absent","absent","absent","absent","11-50","<250","<250","<250","11-50","<250","11-50","<250","11-50","51-250","11-50","absent","absent","absent","absent","1-10",
#                                           "absent","absent","absent","absent","absent","absent","11-50","11-50","51-250","<250","<250","<250","<250","1-10","absent","absent","1-10","absent",
#                                           "absent","absent","absent","absent","absent","absent","51-250","<250","<250","<250","<250","51-250","absent","absent","absent","absent",
#                                           "absent","absent","absent","absent","absent","11-50","absent","absent","<250","<250","<250","11-50","11-50","51-250","1-10","absent",
#                                           "absent","absent","absent","11-50","51-250","51-250","<250","<250","<250","<250","51-250","absent","absent","absent",
#                                           "absent","absent","absent","absent","1-10","absent","absent","absent","absent","absent","absent","absent","absent","absent"])

num_maille = num_maille.assign(TF_2004 =[0,0,0,0,0,0,0,0,0,0,0,4,2,2,0,0,
                                         0,0,0,0,0,0,0,0,0,0,18,3,2,4,3,2,
                                         0,0,0,0,1,1,6,0,4,1,46,74,14,0,0,0,3,0,
                                         0,0,0,0,1,38,71,80,204,250,250,67,250,0,2,0,0,0, 
                                         0,0,0,0,0,0,3,8,155,250,250,250,250,75,48,0,0,0,
                                         0,0,0,0,0,0,76,39,1,16,20,51,104,32,1,0,0,0,
                                         0,0,0,0,0,0,0,54,3,26,44,28,19,1,0,0,0,4,
                                         0,0,0,0,0,0,0,1,13,198,250,250,156,9,0,0,0,0,
                                         0,0,0,0,0,0,6,93,250,250,98,9,0,0,0,0,
                                         0,1,0,0,0,0,0,0,165,151,107,2,15,13,9,4,
                                         0,0,0,57,71,6,50,148,50,27,14,0,0,0,
                                         0,0,0,5,9,0,0,0,0,17,0,3,0,0])

num_maille = num_maille.assign(TF_2004_c =["absent","absent","absent","absent","absent","absent","absent","absent","absent","absent","absent","1-10","1-10","1-10","absent","absent",
                                           "absent","absent","absent","absent","absent","absent","absent","absent","absent","absent","11-50","1-10","1-10","1-10","1-10","1-10",
                                           "absent","absent","absent","absent","1-10","1-10","1-10","absent","1-10","1-10","11-50","51-250","11-50","absent","absent","absent","1-10","absent",
                                           "absent","absent","absent","absent","1-10","11-50","51-250","51-250","51-250","<250","<250","51-250","<250","absent","1-10","absent","absent","absent",
                                           "absent","absent","absent","absent","absent","absent","1-10","1-10","51-250","<250","<250","<250","<250","51-250","11-50","absent","absent","absent",
                                           "absent","absent","absent","absent","absent","absent","51-250","11-50","1-10","11-50","11-50","51-250","51-250","11-50","1-10","absent","absent","absent",
                                           "absent","absent","absent","absent","absent","absent","absent","51-250","1-10","11-50","11-50","11-50","11-50","1-10","absent","absent","absent","1-10",
                                           "absent","absent","absent","absent","absent","absent","absent","1-10","11-50","51-250","<250","<250","51-250","1-10","absent","absent","absent","absent",
                                           "absent","absent","absent","absent","absent","absent","1-10","51-250","<250","<250","51-250","1-10","absent","absent","absent","absent",
                                           "absent","1-10","absent","absent","absent","absent","absent","absent","51-250","51-250","51-250","1-10","11-50","11-50","1-10","1-10",
                                           "absent","absent","absent","51-250","51-250","1-10","11-50","51-250","11-50","11-50","11-50","absent","absent","absent",
                                           "absent","absent","absent","1-10","1-10","absent","absent","absent","absent","11-50","absent","1-10","absent","absent"])

# num_maille_v = num_maille_v.assign(TF_2004 =[0,0,0,0,0,0,0,0,0,0,0,4,2,2,0,0,
#                                          0,0,0,0,0,0,0,0,0,0,18,3,2,4,3,2,
#                                          0,0,0,0,1,1,6,0,4,1,46,74,14,0,0,0,3,0,
#                                          0,0,0,0,1,38,71,80,204,250,250,67,250,0,2,0,0,0, 
#                                          0,0,0,0,0,0,3,8,155,250,250,250,250,75,48,0,0,0,
#                                          0,0,0,0,0,0,76,39,1,16,20,51,104,32,1,0,0,0,
#                                          0,0,0,0,0,0,0,54,3,26,44,28,19,1,0,0,0,4,
#                                          0,0,0,0,0,0,0,1,13,198,250,250,156,9,0,0,0,0,
#                                          0,0,0,0,0,0,6,93,250,250,98,9,0,0,0,0,
#                                          0,1,0,0,0,0,0,0,165,151,107,2,15,13,9,4,
#                                          0,0,0,57,71,6,50,148,50,27,14,0,0,0,
#                                          0,0,0,5,9,0,0,0,0,17,0,3,0,0])

# num_maille_v = num_maille_v.assign(TF_2004_c =["absent","absent","absent","absent","absent","absent","absent","absent","absent","absent","absent","1-10","1-10","1-10","absent","absent",
#                                            "absent","absent","absent","absent","absent","absent","absent","absent","absent","absent","11-50","1-10","1-10","1-10","1-10","1-10",
#                                            "absent","absent","absent","absent","1-10","1-10","1-10","absent","1-10","1-10","11-50","51-250","11-50","absent","absent","absent","1-10","absent",
#                                            "absent","absent","absent","absent","1-10","11-50","51-250","51-250","51-250","<250","<250","51-250","<250","absent","1-10","absent","absent","absent",
#                                            "absent","absent","absent","absent","absent","absent","1-10","1-10","51-250","<250","<250","<250","<250","51-250","11-50","absent","absent","absent",
#                                            "absent","absent","absent","absent","absent","absent","51-250","11-50","1-10","11-50","11-50","51-250","51-250","11-50","1-10","absent","absent","absent",
#                                            "absent","absent","absent","absent","absent","absent","absent","51-250","1-10","11-50","11-50","11-50","11-50","1-10","absent","absent","absent","1-10",
#                                            "absent","absent","absent","absent","absent","absent","absent","1-10","11-50","51-250","<250","<250","51-250","1-10","absent","absent","absent","absent",
#                                            "absent","absent","absent","absent","absent","absent","1-10","51-250","<250","<250","51-250","1-10","absent","absent","absent","absent",
#                                            "absent","1-10","absent","absent","absent","absent","absent","absent","51-250","51-250","51-250","1-10","11-50","11-50","1-10","1-10",
#                                            "absent","absent","absent","51-250","51-250","1-10","11-50","51-250","11-50","11-50","11-50","absent","absent","absent",
#                                            "absent","absent","absent","1-10","1-10","absent","absent","absent","absent","11-50","absent","1-10","absent","absent"])

# 150 = classe 51 à 250
num_maille = num_maille.assign(TF_2006 =[0,0,0,0,0,0,0,0,0,0,0,16,16,1,0,0,
                                         0,0,0,0,0,0,0,0,0,0,0,2,6,9,17,1,
                                         0,0,0,0,1,1,2,5,10,7,150,150,33,0,1,3,7,3,
                                         0,0,0,0,1,150,150,150,250,250,250,150,150,1,1,0,0,0,
                                         0,0,0,0,0,0,48,150,250,250,250,250,250,150,42,0,0,0,
                                         0,0,0,0,0,11,150,16,1,150,150,150,150,45,2,0,0,0,
                                         0,0,0,0,0,150,250,24,20,150,21,3,19,0,0,0,0,10,
                                         0,0,0,0,0,2,1,1,150,250,250,250,150,24,0,0,0,1,
                                         0,0,0,0,0,0,17,250,250,250,250,20,0,3,0,0,
                                         0,1,0,0,0,0,0,9,150,250,150,3,31,48,20,1,
                                         0,0,0,30,43,3,150,150,150,48,38,0,0,0,
                                         0,0,0,35,0,1,0,0,0,0,0,1,1,0])

num_maille = num_maille.assign(TF_2006_c =["absent","absent","absent","absent","absent","absent","absent","absent","absent","absent","absent","11-50","11-50","1-10","absent","absent",
                                           "absent","absent","absent","absent","absent","absent","absent","absent","absent","absent","absent","1-10","1-10","1-10","11-50","1-10",
                                           "absent","absent","absent","absent","1-10","1-10","1-10","1-10","1-10","1-10","51-250","51-250","11-50","absent","1-10","1-10","1-10","1-10",
                                           "absent","absent","absent","absent","1-10","51-250","51-250","51-250","<250","<250","<250","51-250","51-250","1-10","1-10","absent","absent","absent",
                                           "absent","absent","absent","absent","absent","absent","11-50","51-250","<250","<250","<250","<250","<250","51-250","11-50","absent","absent","absent",
                                           "absent","absent","absent","absent","absent","11-50","51-250","11-50","1-10","51-250","51-250","51-250","51-250","11-50","1-10","absent","absent","absent",
                                           "absent","absent","absent","absent","absent","51-250","<250","11-50","11-50","51-250","11-50","1-10","11-50","absent","absent","absent","absent","1-10",
                                           "absent","absent","absent","absent","absent","1-10","1-10","1-10","51-250","<250","<250","<250","51-250","11-50","absent","absent","absent","1-10",
                                           "absent","absent","absent","absent","absent","absent","11-50","<250","<250","<250","<250","11-50","absent","1-10","absent","absent",
                                           "absent","1-10","absent","absent","absent","absent","absent","1-10","51-250","<250","51-250","1-10","11-50","11-50","11-50","1-10",
                                           "absent","absent","absent","11-50","11-50","1-10","51-250","51-250","51-250","11-50","11-50","absent","absent","absent",
                                           "absent","absent","absent","11-50","absent","1-10","absent","absent","absent","absent","absent","1-10","1-10","absent"])



# 150 = classe 51 à 250
# fichier csv
# num_maille_v = num_maille_v.assign(TF_2006 =[0,0,0,0,0,0,0,0,0,0,0,16,16,1,0,0,
#                                          0,0,0,0,0,0,0,0,0,0,0,2,6,9,17,1,
#                                          0,0,0,0,1,1,2,5,10,7,150,150,33,0,1,3,7,3,
#                                          0,0,0,0,1,150,150,150,250,250,250,150,150,1,1,0,0,0,
#                                          0,0,0,0,0,0,48,150,250,250,250,250,250,150,42,0,0,0,
#                                          0,0,0,0,0,11,150,16,1,150,150,150,150,45,2,0,0,0,
#                                          0,0,0,0,0,150,250,24,20,150,21,3,19,0,0,0,0,10,
#                                          0,0,0,0,0,2,1,1,150,250,250,250,150,24,0,0,0,1,
#                                          0,0,0,0,0,0,17,250,250,250,250,20,0,3,0,0,
#                                          0,1,0,0,0,0,0,9,150,250,150,3,31,48,20,1,
#                                          0,0,0,30,43,3,150,150,150,48,38,0,0,0,
#                                          0,0,0,35,0,1,0,0,0,0,0,1,1,0])

# num_maille_v = num_maille_v.assign(TF_2006_c =["absent","absent","absent","absent","absent","absent","absent","absent","absent","absent","absent","11-50","11-50","1-10","absent","absent",
#                                            "absent","absent","absent","absent","absent","absent","absent","absent","absent","absent","absent","1-10","1-10","1-10","11-50","1-10",
#                                            "absent","absent","absent","absent","1-10","1-10","1-10","1-10","1-10","1-10","51-250","51-250","11-50","absent","1-10","1-10","1-10","1-10",
#                                            "absent","absent","absent","absent","1-10","51-250","51-250","51-250","<250","<250","<250","51-250","51-250","1-10","1-10","absent","absent","absent",
#                                            "absent","absent","absent","absent","absent","absent","11-50","51-250","<250","<250","<250","<250","<250","51-250","11-50","absent","absent","absent",
#                                            "absent","absent","absent","absent","absent","11-50","51-250","11-50","1-10","51-250","51-250","51-250","51-250","11-50","1-10","absent","absent","absent",
#                                            "absent","absent","absent","absent","absent","51-250","<250","11-50","11-50","51-250","11-50","1-10","11-50","absent","absent","absent","absent","1-10",
#                                            "absent","absent","absent","absent","absent","1-10","1-10","1-10","51-250","<250","<250","<250","51-250","11-50","absent","absent","absent","1-10",
#                                            "absent","absent","absent","absent","absent","absent","11-50","<250","<250","<250","<250","11-50","absent","1-10","absent","absent",
#                                            "absent","1-10","absent","absent","absent","absent","absent","1-10","51-250","<250","51-250","1-10","11-50","11-50","11-50","1-10",
#                                            "absent","absent","absent","11-50","11-50","1-10","51-250","51-250","51-250","11-50","11-50","absent","absent","absent",
#                                            "absent","absent","absent","11-50","absent","1-10","absent","absent","absent","absent","absent","1-10","1-10","absent"])

# le 30 en BL20 (5e colonne,7e élément) /BM21 (6e colonne,8e élément) /BM26 (6e colonne,13e elementt) /BN22 (7e élément,9e élément) /BN24 (7e élément,11e élément) / BO26 (8e colonne,13 élément) est la moyenne de la classe 11+50/2
num_maille = num_maille.assign(TF_2009 =[0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,
                                         0,0,0,1,0,0,0,0,0,0,0,0,5,7,3,0,0,0,0,0,3,7,9,9,3,12,150,150,26,7,1,4,1,0,
                                         0,0,0,0,0,150,150,150,250,250,250,150,150,3,8,0,0,0,
                                         0,0,0,0,0,10,30,150,150,250,250,250,250,150,150,0,0,0,
                                         0,0,0,0,0,2,150,30,0,21,150,150,30,40,2,0,0,0,
                                         0,0,0,0,0,150,250,5,30,150,30,7,4,0,0,0,1,2,
                                         0,0,0,0,0,0,2,1,150,250,250,250,30,5,0,0,0,0,
                                         0,0,0,0,0,0,5,150,250,250,150,0,0,10,0,0,
                                         0,0,0,0,0,0,0,0,8,150,150,3,1,30,12,0,
                                         0,0,0,150,150,0,150,150,31,17,5,0,0,1,
                                         0,0,0,150,5,4,0,0,0,0,0,18,1,0])


num_maille = num_maille.assign(TF_2009_c =["absent","absent","absent","absent","absent","absent","absent","absent","absent","absent","absent","absent","1-10","absent","absent","absent",
                                           "absent","absent","absent","1-10","absent","absent","absent","absent","absent","absent","absent","absent","1-10","1-10","1-10","absent",
                                           "absent","absent","absent","absent","1-10","1-10","1-10","1-10","1-10","11-50","51-250","51-250","11-50","1-10","1-10","1-10","1-10","absent",
                                           "absent","absent","absent","absent","absent","51-250","51-250","51-250","<250","<250","<250","51-250","51-250","1-10","1-10","absent","absent","absent",
                                           "absent","absent","absent","absent","absent","1-10","11-50","51-250","51-250","<250","<250","<250","<250","51-250","51-250","absent","absent","absent",
                                           "absent","absent","absent","absent","absent","1-10","51-250","11-50","absent","11-50","51-250","51-250","11-50","11-50","1-10","absent","absent","absent",
                                           "absent","absent","absent","absent","absent","51-250","<250","1-10","11-50","51-250","11-50","1-10","1-10","absent","absent","absent","1-10","1-10",
                                           "absent","absent","absent","absent","absent","absent", "1-10","1-10","51-250","<250","<250","<250","11-50","1-10","absent","absent","absent","absent",
                                           "absent","absent","absent","absent","absent","absent","1-10","51-250","<250","<250","51-250","absent","absent","1-10","absent","absent",
                                           "absent","absent","absent","absent","absent","absent","absent","absent","1-10","51-250","51-250","1-10","1-10","11-50","11-50","absent",
                                           "absent","absent","absent","51-250","51-250","absent","51-250","51-250","11-50","11-50","1-10","absent","absent","1-10",
                                           "absent","absent","absent","51-250","1-10","1-10","absent","absent","absent","absent","absent","11-50","1-10","absent"])


# fichier csv
# le 30 en BL20 (5e colonne,7e élément) /BM21 (6e colonne,8e élément) /BM26 (6e colonne,13e elementt) /BN22 (7e élément,9e élément) /BN24 (7e élément,11e élément) / BO26 (8e colonne,13 élément) est la moyenne de la classe 11+50/2
# num_maille_v = num_maille.assign(TF_2009 =[0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,
#                                          0,0,0,1,0,0,0,0,0,0,0,0,5,7,3,0,0,0,0,0,3,7,9,9,3,12,150,150,26,7,1,4,1,0,
#                                          0,0,0,0,0,150,150,150,250,250,250,150,150,3,8,0,0,0,
#                                          0,0,0,0,0,10,30,150,150,250,250,250,250,150,150,0,0,0,
#                                          0,0,0,0,0,2,150,30,0,21,150,150,30,40,2,0,0,0,
#                                          0,0,0,0,0,150,250,5,30,150,30,7,4,0,0,0,1,2,
#                                          0,0,0,0,0,0,2,1,150,250,250,250,30,5,0,0,0,0,
#                                          0,0,0,0,0,0,5,150,250,250,150,0,0,10,0,0,
#                                          0,0,0,0,0,0,0,0,8,150,150,3,1,30,12,0,
#                                          0,0,0,150,150,0,150,150,31,17,5,0,0,1,
#                                          0,0,0,150,5,4,0,0,0,0,0,18,1,0])


# num_maille_v = num_maille.assign(TF_2009_c =["absent","absent","absent","absent","absent","absent","absent","absent","absent","absent","absent","absent","1-10","absent","absent","absent",
#                                            "absent","absent","absent","1-10","absent","absent","absent","absent","absent","absent","absent","absent","1-10","1-10","1-10","absent",
#                                            "absent","absent","absent","absent","1-10","1-10","1-10","1-10","1-10","11-50","51-250","51-250","11-50","1-10","1-10","1-10","1-10","absent",
#                                            "absent","absent","absent","absent","absent","51-250","51-250","51-250","<250","<250","<250","51-250","51-250","1-10","1-10","absent","absent","absent",
#                                            "absent","absent","absent","absent","absent","1-10","11-50","51-250","51-250","<250","<250","<250","<250","51-250","51-250","absent","absent","absent",
#                                            "absent","absent","absent","absent","absent","1-10","51-250","11-50","absent","11-50","51-250","51-250","11-50","11-50","1-10","absent","absent","absent",
#                                            "absent","absent","absent","absent","absent","51-250","<250","1-10","11-50","51-250","11-50","1-10","1-10","absent","absent","absent","1-10","1-10",
#                                            "absent","absent","absent","absent","absent","absent", "1-10","1-10","51-250","<250","<250","<250","11-50","1-10","absent","absent","absent","absent",
#                                            "absent","absent","absent","absent","absent","absent","1-10","51-250","<250","<250","51-250","absent","absent","1-10","absent","absent",
#                                            "absent","absent","absent","absent","absent","absent","absent","absent","1-10","51-250","51-250","1-10","1-10","11-50","11-50","absent",
#                                            "absent","absent","absent","51-250","51-250","absent","51-250","51-250","11-50","11-50","1-10","absent","absent","1-10",
#                                            "absent","absent","absent","51-250","1-10","1-10","absent","absent","absent","absent","absent","11-50","1-10","absent"])

print(num_maille['TF_1997'].value_counts(), num_maille['TF_2001_c'].value_counts(), num_maille['TF_2004_c'].value_counts(), num_maille['TF_2006_c'].value_counts(), num_maille['TF_2009_c'].value_counts())

"""# option 1 : mettre toutes les catégories d'abondance dans la même colonne """

abond_TF = pd.DataFrame({"Effectif":[114, 36, 21, 19, 10,109,39,18,17,17,112,35,21,21,11,101,35,24,23,17,109,37,26,15,13],
                         "Categorie":["Abs","<250", "11-50", "1-10","51-250","Abs","<250", "11-50", "1-10","51-250","Abs","1-10", "11-50","51-250","<250","Abs","1-10","11-50","51-250","<250","Abs","1-10","51-250","11-50","<250"],
                        "Annee":[1997,1997,1997,1997,1997, 2001,2001,2001,2001,2001,2004,2004,2004,2004,2004,2006,2006,2006,2006,2006,2009,2009,2009,2009,2009]})

abond_TF
column_names = ["Effectif_NF", "Categorie_abondance", "Annee"]


abond_TF

"""## Option 2 : faire une colonne par catégories d'abondance 

Pour cette option, on peut faire une analyse de kruskal wallis car ce sont des données non-paramétriques. on compare les catégories d'abondance en fonction des années. On n'analyse pas la variation de la répartition de l'abondance selon les années donc de ce que j'ai pris, faire un test glmm de type comptage (distribution de Poisson) pour observer les variations d'abondance d'après les catégories et les années. 
"""

print(num_maille['TF_1997'].value_counts(), num_maille['TF_2001_c'].value_counts(), num_maille['TF_2004_c'].value_counts(), num_maille['TF_2006_c'].value_counts(), num_maille['TF_2009_c'].value_counts())

classe_TF = pd.DataFrame({"Abs":[114,109,112,101,109],
                         "1-10":[19,17,35,35,37],
                         "11-50":[21,18,21,24,15],
                         "51-250":[10,17,21,23,26],
                         "<250":[36,39,11,17,13],
                        "Annee":[1997,2001,2004,2006,2009]})

classe_TF

"""# Tiges fleuries + non fleuries : séries et cartes 1997, 2001, 2004

"""

# <11 = 10 / <101 = 100 / <112 = 111 / <21 = 20 / <152 = 151 /<61 = 60 /
num_maille = num_maille.assign(TF_F_1997 =["absent","1-10","absent","absent","absent","absent","absent","absent","absent","absent","1-10","11-100","11-100","11-100","11-100","1-10",
                                           "absent","absent","absent","absent","absent","absent","absent","absent","absent","absent","absent","1-10","12-111","12-111","12-111","12-111",
                                           "absent","absent","absent","absent","2-20"])

num_maille["P_A_1997"].astype(bool)
num_maille["P_A_2001"].astype(bool)

from geopandas import GeoDataFrame

maille = GeoDataFrame(num_maille)

maille.head()

"""problème : afficher la colonne P/A pour voir si les cases que j'ai remplie sont au bonne endroit """

num_maille["geometry"].head()

num_maille.plot(column = "P_A_1997",figsize=(10,10), legend=True)